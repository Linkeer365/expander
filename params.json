{"name":"Expander","body":"# Overview\r\nExpander lets one run code in other code by allowing one to define functions\r\nthat are expanded out by executing them and putting their results back in the\r\nfile. The prupose is that given a file or directory, we can expand \"macros\"\r\nusing a given language.\r\n\r\n# Usage\r\n### Macro definition (\"hello\" is the name, and \"python\" is the language):\r\n\r\n```\r\n??defm:hello:python(arg1, arg2){{\r\nprint \"puts 'Hello, %s!!!' \\n%s\" % (arg1, arg2)\r\n}}\r\n```\r\n\r\n### Macro call (eg, in ruby code):\r\n\r\n```\r\n??hello??'Joe'??'puts \"Why, dude?\"'??\r\n```\r\n\r\n### Result:\r\n\r\n```\r\nputs 'Hello, Joe!!!'\r\nputs \"Why, dude?\"\r\n```\r\n\r\n### To call:\r\n\r\n```\r\npython expander.py [FILE|DIRECTORY]\r\n```\r\n\r\nIf a file is passed in, the expanded output is printed to stdout. If a\r\ndirectory is passed in, all files matching *.exp.* will be expanded into\r\n*.* (the '.exp.' being removed).","tagline":"Defines a sort of macro like language that can run any language in a text file and output the expanded result.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}